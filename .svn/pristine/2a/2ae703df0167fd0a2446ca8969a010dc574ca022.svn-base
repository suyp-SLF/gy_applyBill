package kd.cus.wb.report;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import kd.bos.algo.Algo;
import kd.bos.algo.DataSet;
import kd.bos.algo.DataType;
import kd.bos.algo.RowMeta;
import kd.bos.context.RequestContext;
import kd.bos.dataentity.entity.DynamicObject;
import kd.bos.dataentity.entity.DynamicObjectCollection;
import kd.bos.dataentity.entity.LocaleString;
import kd.bos.entity.report.*;
import kd.bos.ext.fi.eb.operation.QueryBudgetService;
import kd.bos.orm.query.QCP;
import kd.bos.orm.query.QFilter;
import kd.bos.servicehelper.BusinessDataServiceHelper;
import kd.bos.servicehelper.QueryServiceHelper;
import org.apache.commons.lang3.StringUtils;

import java.math.BigDecimal;
import java.util.*;
import java.util.stream.Collectors;

/**
 * 外币余额表
 */

public class CurrencyBalanceListDataPlugin extends AbstractReportListDataPlugin {

    private static final String BALANCE_TABLE = "gl_balance";
    private static DynamicObjectCollection vouchers = null;

    @Override
    public DataSet query(ReportQueryParam reportQueryParam, Object o) throws Throwable {
        FilterInfo filter = reportQueryParam.getFilter();
        DynamicObject start = filter.getDynamicObject("bfgy_startperiod");
        DynamicObject end = filter.getDynamicObject("bfgy_endperiod");

        QFilter[] timeQfilter = new QFilter[2];
        if (null != start) {
        	Date startdate = start.getDate("begindate");
        	timeQfilter[0] = new QFilter("begindate", QCP.large_equals, startdate);
		}
        if(null != end) {
        	Date enddate = end.getDate("enddate");
        	timeQfilter[1] = new QFilter("enddate", QCP.less_equals, enddate);
        }
        DynamicObjectCollection periods = QueryServiceHelper.query("bd_period", "id", timeQfilter);
        
        List<String> periodids = periods.stream().map(i->i.getString("id")).collect(Collectors.toList());
        
        QFilter[] qFilters = new QFilter[4];
        qFilters[0] = new QFilter("period.id", QCP.in, periodids);
//        qFilters[2] = new QFilter("ispost", QCP.equals, true);
        qFilters[3] = new QFilter("org.number", QCP.equals, "8018");


        List<Object[]> result_dataSetList = new ArrayList<>();
        if (true) {
            vouchers = QueryServiceHelper.query(BALANCE_TABLE, "id,account.number,debitfor,creditfor,debitlocal,creditlocal,currency.number", qFilters);
        }

        Map<String, BigDecimal> amountMap_USD = new HashMap<String, BigDecimal>() {{
            put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};

        Map<String, BigDecimal> amountMap_EUR = new HashMap<String, BigDecimal>() {{
        	put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};
        
        Map<String, BigDecimal> amountMap_HKD = new HashMap<String, BigDecimal>() {{
        	put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};
        
        Map<String, BigDecimal> amountMap_USD_LO = new HashMap<String, BigDecimal>() {{
            put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};

        Map<String, BigDecimal> amountMap_EUR_LO = new HashMap<String, BigDecimal>() {{
        	put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};
        
        Map<String, BigDecimal> amountMap_HKD_LO = new HashMap<String, BigDecimal>() {{
        	put("col_01", BigDecimal.ZERO);
            put("col_02", BigDecimal.ZERO);
            put("col_03", BigDecimal.ZERO);
            put("col_04", BigDecimal.ZERO);
            put("col_05", BigDecimal.ZERO);
            put("col_06", BigDecimal.ZERO);
            put("col_07", BigDecimal.ZERO);
            put("col_08", BigDecimal.ZERO);
            put("col_09", BigDecimal.ZERO);
            put("col_10", BigDecimal.ZERO);
            put("col_11", BigDecimal.ZERO);
            put("col_12", BigDecimal.ZERO);
            put("col_13", BigDecimal.ZERO);
            put("col_14", BigDecimal.ZERO);
            put("col_15", BigDecimal.ZERO);
            put("col_16", BigDecimal.ZERO);
            put("col_17", BigDecimal.ZERO);
            
            put("col_51", BigDecimal.ZERO);
            put("col_52", BigDecimal.ZERO);
            put("col_53", BigDecimal.ZERO);
            put("col_54", BigDecimal.ZERO);
            put("col_55", BigDecimal.ZERO);
            put("col_56", BigDecimal.ZERO);
            put("col_57", BigDecimal.ZERO);
            put("col_58", BigDecimal.ZERO);
            put("col_59", BigDecimal.ZERO);
            put("col_60", BigDecimal.ZERO);
            put("col_61", BigDecimal.ZERO);
            put("col_62", BigDecimal.ZERO);
            put("col_63", BigDecimal.ZERO);
        }};
//id,debitfor,creditfor,debitlocal,creditlocal,currency.number
        for (DynamicObject voucher : vouchers) {
            BigDecimal amount = voucher.getBigDecimal("debitfor");//借
            BigDecimal amountd = voucher.getBigDecimal("creditfor");//贷
            BigDecimal amountlocal = voucher.getBigDecimal("debitlocal");
            BigDecimal amountlocald = voucher.getBigDecimal("creditlocal");
            String currencynum = voucher.getString("currency.number");
//            String value = voucher.getString("entries.assgrp.value");
            String value = "1";

            if (null != voucher && null != value && "USD".equalsIgnoreCase(currencynum)) {
                String keynumber = voucher.getString("account.number");
                if(keynumber.startsWith("1001")) {////库存现金
                	amountMap_USD.put("col_01", amountMap_USD.get("col_01").add(amount).subtract(amountd));
                	amountMap_USD_LO.put("col_01", amountMap_USD_LO.get("col_01").add(amountlocal).subtract(amountlocald));
            	} else if (keynumber.startsWith("1002")) {//货币资金,银行存款
                    amountMap_USD.put("col_02", amountMap_USD.get("col_02").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_02", amountMap_USD_LO.get("col_02").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1012")) {//其他货币资金
                    amountMap_USD.put("col_03", amountMap_USD.get("col_03").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_03", amountMap_USD_LO.get("col_03").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1121")) {//应收票据
                    amountMap_USD.put("col_04", amountMap_USD.get("col_04").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_04", amountMap_USD_LO.get("col_04").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1132")) {//应收利息
                    amountMap_USD.put("col_05", amountMap_USD.get("col_05").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_05", amountMap_USD_LO.get("col_05").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//坏账准备
                    amountMap_USD.put("col_06", amountMap_USD.get("col_06").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_06", amountMap_USD_LO.get("col_06").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1477")) {//合同资产
                    amountMap_USD.put("col_07", amountMap_USD.get("col_07").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_07", amountMap_USD_LO.get("col_07").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1478")) {//合同资产减值准备
                    amountMap_USD.put("col_08", amountMap_USD.get("col_08").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_08", amountMap_USD_LO.get("col_08").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1501")) {//债权投资
                    amountMap_USD.put("col_09", amountMap_USD.get("col_09").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_09", amountMap_USD_LO.get("col_09").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1502")) {//债权投资减值准备
                    amountMap_USD.put("col_11", amountMap_USD.get("col_10").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_11", amountMap_USD_LO.get("col_11").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1524")) {//应收融资租赁款
                    amountMap_USD.put("col_11", amountMap_USD.get("col_11").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_11", amountMap_USD_LO.get("col_11").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1531")) {//长期应收款
                    amountMap_USD.put("col_12", amountMap_USD.get("col_12").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_12", amountMap_USD_LO.get("col_12").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1532")) {//未实现融资收益
                    amountMap_USD.put("col_13", amountMap_USD.get("col_13").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_13", amountMap_USD_LO.get("col_13").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1131")) {//应收股利
                    amountMap_USD.put("col_14", amountMap_USD.get("col_14").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_14", amountMap_USD_LO.get("col_14").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1122")) {//应收账款
                    amountMap_USD.put("col_15", amountMap_USD.get("col_15").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_15", amountMap_USD_LO.get("col_15").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//其他应收款
                    amountMap_USD.put("col_16", amountMap_USD.get("col_16").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_16", amountMap_USD_LO.get("col_16").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1123")) {//预付账款
                    amountMap_USD.put("col_17", amountMap_USD.get("col_17").add(amount).subtract(amountd));
                    amountMap_USD_LO.put("col_17", amountMap_USD_LO.get("col_17").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("2202")) {//应付账款
                    amountMap_USD.put("col_51", amountMap_USD.get("col_51").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_51", amountMap_USD_LO.get("col_51").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2203")) {//预收账款
                    amountMap_USD.put("col_52", amountMap_USD.get("col_52").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_52", amountMap_USD_LO.get("col_52").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2241")) {//其他应付款
                    amountMap_USD.put("col_53", amountMap_USD.get("col_53").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_53", amountMap_USD_LO.get("col_53").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2001")) {//短期借款
                    amountMap_USD.put("col_54", amountMap_USD.get("col_54").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_54", amountMap_USD_LO.get("col_54").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2201")) {//应付票据
                    amountMap_USD.put("col_55", amountMap_USD.get("col_55").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_55", amountMap_USD_LO.get("col_55").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2204")) {//合同负债
                    amountMap_USD.put("col_56", amountMap_USD.get("col_56").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_56", amountMap_USD_LO.get("col_56").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2231")) {//应付利息
                    amountMap_USD.put("col_57", amountMap_USD.get("col_57").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_57", amountMap_USD_LO.get("col_57").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2232")) {//应付股利
                    amountMap_USD.put("col_58", amountMap_USD.get("col_58").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_58", amountMap_USD_LO.get("col_58").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2501")) {//长期借款
                    amountMap_USD.put("col_59", amountMap_USD.get("col_59").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_59", amountMap_USD_LO.get("col_59").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2502")) {//应付债券
                    amountMap_USD.put("col_60", amountMap_USD.get("col_60").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_60", amountMap_USD_LO.get("col_60").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2701")) {//长期应付款
                    amountMap_USD.put("col_61", amountMap_USD.get("col_61").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_61", amountMap_USD_LO.get("col_61").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2702")) {//未确认融资费用
                    amountMap_USD.put("col_62", amountMap_USD.get("col_62").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_62", amountMap_USD_LO.get("col_62").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2711")) {//专项应付款
                    amountMap_USD.put("col_63", amountMap_USD.get("col_63").add(amountd).subtract(amount));
                    amountMap_USD_LO.put("col_63", amountMap_USD_LO.get("col_63").add(amountlocald).subtract(amountlocal));
                }
            } else if (null != voucher && null != value && "EUR".equalsIgnoreCase(currencynum)) {
                String keynumber = voucher.getString("account.number");
                if(keynumber.startsWith("1001")) {
                	amountMap_EUR.put("col_01", amountMap_EUR.get("col_01").add(amount).subtract(amountd));
                	amountMap_EUR_LO.put("col_01", amountMap_EUR_LO.get("col_01").add(amountlocal).subtract(amountlocald));
            	} else if (keynumber.startsWith("1002")) {//货币资金,银行存款
                    amountMap_EUR.put("col_02", amountMap_EUR.get("col_02").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_02", amountMap_EUR_LO.get("col_02").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1012")) {//其他货币资金
                    amountMap_EUR.put("col_03", amountMap_EUR.get("col_03").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_03", amountMap_EUR_LO.get("col_03").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1121")) {//其他货币资金
                    amountMap_EUR.put("col_04", amountMap_EUR.get("col_04").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_04", amountMap_EUR_LO.get("col_04").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1132")) {//应收利息
                    amountMap_EUR.put("col_05", amountMap_EUR.get("col_05").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_05", amountMap_EUR_LO.get("col_05").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//坏账准备
                    amountMap_EUR.put("col_06", amountMap_EUR.get("col_06").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_06", amountMap_EUR_LO.get("col_06").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1477")) {//合同资产
                    amountMap_EUR.put("col_07", amountMap_EUR.get("col_07").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_07", amountMap_EUR_LO.get("col_07").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1478")) {//合同资产减值准备
                    amountMap_EUR.put("col_08", amountMap_EUR.get("col_08").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_08", amountMap_EUR_LO.get("col_08").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1501")) {//债权投资
                    amountMap_EUR.put("col_09", amountMap_EUR.get("col_09").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_09", amountMap_EUR_LO.get("col_09").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1502")) {//债权投资减值准备
                    amountMap_EUR.put("col_10", amountMap_EUR.get("col_10").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_10", amountMap_EUR_LO.get("col_10").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1524")) {//应收融资租赁款
                    amountMap_EUR.put("col_11", amountMap_EUR.get("col_11").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_11", amountMap_EUR_LO.get("col_11").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1531")) {//长期应收款
                    amountMap_EUR.put("col_12", amountMap_EUR.get("col_12").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_12", amountMap_EUR_LO.get("col_12").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1532")) {//未实现融资收益
                    amountMap_EUR.put("col_13", amountMap_EUR.get("col_13").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_13", amountMap_EUR_LO.get("col_13").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1131")) {//应收股利
                    amountMap_EUR.put("col_14", amountMap_EUR.get("col_14").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_14", amountMap_EUR_LO.get("col_14").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1122")) {//应收账款
                    amountMap_EUR.put("col_15", amountMap_EUR.get("col_15").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_15", amountMap_EUR_LO.get("col_15").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//其他应收款
                    amountMap_EUR.put("col_16", amountMap_EUR.get("col_16").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_16", amountMap_EUR_LO.get("col_16").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1123")) {//预付账款
                    amountMap_EUR.put("col_17", amountMap_EUR.get("col_17").add(amount).subtract(amountd));
                    amountMap_EUR_LO.put("col_17", amountMap_EUR_LO.get("col_17").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("2202")) {//应付账款
                    amountMap_EUR.put("col_51", amountMap_EUR.get("col_51").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_51", amountMap_EUR_LO.get("col_51").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2203")) {//预收账款
                    amountMap_EUR.put("col_52", amountMap_EUR.get("col_52").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_52", amountMap_EUR_LO.get("col_52").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2241")) {//其他应付款
                    amountMap_EUR.put("col_53", amountMap_EUR.get("col_53").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_53", amountMap_EUR_LO.get("col_53").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2001")) {//短期借款
                    amountMap_EUR.put("col_54", amountMap_EUR.get("col_54").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_54", amountMap_EUR_LO.get("col_54").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2201")) {//应付票据
                    amountMap_EUR.put("col_55", amountMap_EUR.get("col_55").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_55", amountMap_EUR_LO.get("col_55").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2204")) {//合同负债
                    amountMap_EUR.put("col_56", amountMap_EUR.get("col_56").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_56", amountMap_EUR_LO.get("col_56").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2231")) {//应付利息
                    amountMap_EUR.put("col_57", amountMap_EUR.get("col_57").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_57", amountMap_EUR_LO.get("col_57").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2232")) {//应付股利
                    amountMap_EUR.put("col_58", amountMap_EUR.get("col_58").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_58", amountMap_EUR_LO.get("col_58").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2501")) {//长期借款
                    amountMap_EUR.put("col_59", amountMap_EUR.get("col_59").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_59", amountMap_EUR_LO.get("col_59").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2502")) {//应付债券
                    amountMap_EUR.put("col_60", amountMap_EUR.get("col_60").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_60", amountMap_EUR_LO.get("col_60").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2701")) {//长期应付款
                    amountMap_EUR.put("col_61", amountMap_EUR.get("col_61").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_61", amountMap_EUR_LO.get("col_61").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2702")) {//未确认融资费用
                    amountMap_EUR.put("col_62", amountMap_EUR.get("col_62").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_62", amountMap_EUR_LO.get("col_62").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2711")) {//专项应付款
                    amountMap_EUR.put("col_63", amountMap_EUR.get("col_63").add(amountd).subtract(amount));
                    amountMap_EUR_LO.put("col_63", amountMap_EUR_LO.get("col_63").add(amountlocald).subtract(amountlocal));
                }
            } else if (null != voucher && null != value && "HKD".equalsIgnoreCase(currencynum)) {
                String keynumber = voucher.getString("account.number");
                if(keynumber.startsWith("1001")) {
                	amountMap_HKD.put("col_01", amountMap_HKD.get("col_01").add(amount).subtract(amountd));
                	amountMap_HKD_LO.put("col_01", amountMap_HKD_LO.get("col_01").add(amountlocal).subtract(amountlocald));
            	} else if (keynumber.startsWith("1002")) {//货币资金,银行存款
            		amountMap_HKD.put("col_02", amountMap_HKD.get("col_02").add(amount).subtract(amountd));
            		amountMap_HKD_LO.put("col_02", amountMap_HKD_LO.get("col_02").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1012")) {//其他货币资金
                	amountMap_HKD.put("col_03", amountMap_HKD.get("col_03").add(amount).subtract(amountd));
                	amountMap_HKD_LO.put("col_03", amountMap_HKD_LO.get("col_03").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1121")) {//其他货币资金
                	amountMap_HKD.put("col_04", amountMap_HKD.get("col_04").add(amount).subtract(amountd));
                	amountMap_HKD_LO.put("col_04", amountMap_HKD_LO.get("col_04").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1132")) {//应收利息
                    amountMap_HKD.put("col_05", amountMap_HKD.get("col_05").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_05", amountMap_HKD_LO.get("col_05").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//坏账准备
                    amountMap_HKD.put("col_06", amountMap_HKD.get("col_06").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_06", amountMap_HKD_LO.get("col_06").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1477")) {//合同资产
                    amountMap_HKD.put("col_07", amountMap_HKD.get("col_07").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_07", amountMap_HKD_LO.get("col_07").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1478")) {//合同资产减值准备
                    amountMap_HKD.put("col_08", amountMap_HKD.get("col_08").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_08", amountMap_HKD_LO.get("col_08").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1501")) {//债权投资
                    amountMap_HKD.put("col_09", amountMap_HKD.get("col_09").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_09", amountMap_HKD_LO.get("col_09").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1502")) {//债权投资减值准备
                    amountMap_HKD.put("col_10", amountMap_HKD.get("col_10").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_10", amountMap_HKD_LO.get("col_10").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1524")) {//应收融资租赁款
                    amountMap_HKD.put("col_11", amountMap_HKD.get("col_11").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_11", amountMap_HKD_LO.get("col_11").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1531")) {//长期应收款
                    amountMap_HKD.put("col_12", amountMap_HKD.get("col_12").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_12", amountMap_HKD_LO.get("col_12").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1532")) {//未实现融资收益
                    amountMap_HKD.put("col_13", amountMap_HKD.get("col_13").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_13", amountMap_HKD_LO.get("col_13").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1131")) {//应收股利
                    amountMap_HKD.put("col_14", amountMap_HKD.get("col_14").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_14", amountMap_HKD_LO.get("col_14").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1122")) {//应收账款
                    amountMap_HKD.put("col_15", amountMap_HKD.get("col_15").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_15", amountMap_HKD_LO.get("col_15").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1231")) {//其他应收款
                    amountMap_HKD.put("col_16", amountMap_HKD.get("col_16").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_16", amountMap_HKD_LO.get("col_16").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("1123")) {//预付账款
                    amountMap_HKD.put("col_17", amountMap_HKD.get("col_17").add(amount).subtract(amountd));
                    amountMap_HKD_LO.put("col_17", amountMap_HKD_LO.get("col_17").add(amountlocal).subtract(amountlocald));
                } else if (keynumber.startsWith("2202")) {//应付账款
                    amountMap_HKD.put("col_51", amountMap_HKD.get("col_51").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_51", amountMap_HKD_LO.get("col_51").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2203")) {//预收账款
                    amountMap_HKD.put("col_52", amountMap_HKD.get("col_52").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_52", amountMap_HKD_LO.get("col_52").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2241")) {//其他应付款
                    amountMap_HKD.put("col_53", amountMap_HKD.get("col_53").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_53", amountMap_HKD_LO.get("col_53").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2001")) {//短期借款
                    amountMap_HKD.put("col_54", amountMap_HKD.get("col_54").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_54", amountMap_HKD_LO.get("col_54").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2201")) {//应付票据
                    amountMap_HKD.put("col_55", amountMap_HKD.get("col_55").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_55", amountMap_HKD_LO.get("col_55").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2204")) {//合同负债
                    amountMap_HKD.put("col_56", amountMap_HKD.get("col_56").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_56", amountMap_HKD_LO.get("col_56").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2231")) {//应付利息
                    amountMap_HKD.put("col_57", amountMap_HKD.get("col_57").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_57", amountMap_HKD_LO.get("col_57").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2232")) {//应付股利
                    amountMap_HKD.put("col_58", amountMap_HKD.get("col_58").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_58", amountMap_HKD_LO.get("col_58").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2501")) {//长期借款
                    amountMap_HKD.put("col_59", amountMap_HKD.get("col_59").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_59", amountMap_HKD_LO.get("col_59").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2502")) {//应付债券
                    amountMap_HKD.put("col_60", amountMap_HKD.get("col_60").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_60", amountMap_HKD_LO.get("col_60").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2701")) {//长期应付款
                    amountMap_HKD.put("col_61", amountMap_HKD.get("col_61").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_61", amountMap_HKD_LO.get("col_61").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2702")) {//未确认融资费用
                    amountMap_HKD.put("col_62", amountMap_HKD.get("col_62").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_62", amountMap_HKD_LO.get("col_62").add(amountlocald).subtract(amountlocal));
                } else if (keynumber.startsWith("2711")) {//专项应付款
                    amountMap_HKD.put("col_63", amountMap_HKD.get("col_63").add(amountd).subtract(amount));
                    amountMap_HKD_LO.put("col_63", amountMap_HKD_LO.get("col_63").add(amountlocald).subtract(amountlocal));
                }
            }
        }

        BigDecimal sum_amount_USD = amountMap_USD.get("col_01")
        		.add(amountMap_USD.get("col_02"))
        		.add(amountMap_USD.get("col_03"))
        		.add(amountMap_USD.get("col_04"))
        		.add(amountMap_USD.get("col_05"))
        		.add(amountMap_USD.get("col_06"))
        		.add(amountMap_USD.get("col_07"))
        		.add(amountMap_USD.get("col_08"))
        		.add(amountMap_USD.get("col_09"))
        		.add(amountMap_USD.get("col_10"))
        		.add(amountMap_USD.get("col_11"))
        		.add(amountMap_USD.get("col_12"))
        		.add(amountMap_USD.get("col_13"))
        		.add(amountMap_USD.get("col_14"))
        		.add(amountMap_USD.get("col_15"))
        		.add(amountMap_USD.get("col_16"))
        		.add(amountMap_USD.get("col_17"));
        BigDecimal sum_amount_EUR = amountMap_EUR.get("col_01")
        		.add(amountMap_EUR.get("col_02"))
        		.add(amountMap_EUR.get("col_03"))
        		.add(amountMap_EUR.get("col_04"))
        		.add(amountMap_EUR.get("col_05"))
        		.add(amountMap_EUR.get("col_06"))
        		.add(amountMap_EUR.get("col_07"))
        		.add(amountMap_EUR.get("col_08"))
        		.add(amountMap_EUR.get("col_09"))
        		.add(amountMap_EUR.get("col_10"))
        		.add(amountMap_EUR.get("col_11"))
        		.add(amountMap_EUR.get("col_12"))
        		.add(amountMap_EUR.get("col_13"))
        		.add(amountMap_EUR.get("col_14"))
        		.add(amountMap_EUR.get("col_15"))
        		.add(amountMap_EUR.get("col_16"))
        		.add(amountMap_EUR.get("col_17"));

        BigDecimal sum_amount_HKD = amountMap_HKD.get("col_01")
        		.add(amountMap_HKD.get("col_02"))
        		.add(amountMap_HKD.get("col_03"))
        		.add(amountMap_HKD.get("col_04"))
        		.add(amountMap_HKD.get("col_05"))
        		.add(amountMap_HKD.get("col_06"))
        		.add(amountMap_HKD.get("col_07"))
        		.add(amountMap_HKD.get("col_08"))
        		.add(amountMap_HKD.get("col_09"))
        		.add(amountMap_HKD.get("col_10"))
        		.add(amountMap_HKD.get("col_11"))
        		.add(amountMap_HKD.get("col_12"))
        		.add(amountMap_HKD.get("col_13"))
        		.add(amountMap_HKD.get("col_14"))
        		.add(amountMap_HKD.get("col_15"))
        		.add(amountMap_HKD.get("col_16"))
        		.add(amountMap_HKD.get("col_17"));
        
        BigDecimal sum_amount_USD_LO = amountMap_USD_LO.get("col_01")
        		.add(amountMap_USD_LO.get("col_02"))
        		.add(amountMap_USD_LO.get("col_03"))
        		.add(amountMap_USD_LO.get("col_04"))
        		.add(amountMap_USD_LO.get("col_05"))
        		.add(amountMap_USD_LO.get("col_06"))
        		.add(amountMap_USD_LO.get("col_07"))
        		.add(amountMap_USD_LO.get("col_08"))
        		.add(amountMap_USD_LO.get("col_09"))
        		.add(amountMap_USD_LO.get("col_10"))
        		.add(amountMap_USD_LO.get("col_11"))
        		.add(amountMap_USD_LO.get("col_12"))
        		.add(amountMap_USD_LO.get("col_13"))
        		.add(amountMap_USD_LO.get("col_14"))
        		.add(amountMap_USD_LO.get("col_15"))
        		.add(amountMap_USD_LO.get("col_16"))
        		.add(amountMap_USD_LO.get("col_17"));
        BigDecimal sum_amount_EUR_LO = amountMap_EUR_LO.get("col_01")
        		.add(amountMap_EUR_LO.get("col_02"))
        		.add(amountMap_EUR_LO.get("col_03"))
        		.add(amountMap_EUR_LO.get("col_04"))
        		.add(amountMap_EUR_LO.get("col_05"))
        		.add(amountMap_EUR_LO.get("col_06"))
        		.add(amountMap_EUR_LO.get("col_07"))
        		.add(amountMap_EUR_LO.get("col_08"))
        		.add(amountMap_EUR_LO.get("col_09"))
        		.add(amountMap_EUR_LO.get("col_10"))
        		.add(amountMap_EUR_LO.get("col_11"))
        		.add(amountMap_EUR_LO.get("col_12"))
        		.add(amountMap_EUR_LO.get("col_13"))
        		.add(amountMap_EUR_LO.get("col_14"))
        		.add(amountMap_EUR_LO.get("col_15"))
        		.add(amountMap_EUR_LO.get("col_16"))
        		.add(amountMap_EUR_LO.get("col_17"));

        BigDecimal sum_amount_HKD_LO = amountMap_HKD_LO.get("col_01")
        		.add(amountMap_HKD_LO.get("col_02"))
        		.add(amountMap_HKD_LO.get("col_03"))
        		.add(amountMap_HKD_LO.get("col_04"))
        		.add(amountMap_HKD_LO.get("col_05"))
        		.add(amountMap_HKD_LO.get("col_06"))
        		.add(amountMap_HKD_LO.get("col_07"))
        		.add(amountMap_HKD_LO.get("col_08"))
        		.add(amountMap_HKD_LO.get("col_09"))
        		.add(amountMap_HKD_LO.get("col_10"))
        		.add(amountMap_HKD_LO.get("col_11"))
        		.add(amountMap_HKD_LO.get("col_12"))
        		.add(amountMap_HKD_LO.get("col_13"))
        		.add(amountMap_HKD_LO.get("col_14"))
        		.add(amountMap_HKD_LO.get("col_15"))
        		.add(amountMap_HKD_LO.get("col_16"))
        		.add(amountMap_HKD_LO.get("col_17"));
        
        BigDecimal sum_amount_USD_SUB = amountMap_USD.get("col_51")
        		.add(amountMap_USD.get("col_52"))
        		.add(amountMap_USD.get("col_53"))
        		.add(amountMap_USD.get("col_54"))
        		.add(amountMap_USD.get("col_55"))
        		.add(amountMap_USD.get("col_56"))
        		.add(amountMap_USD.get("col_57"))
        		.add(amountMap_USD.get("col_58"))
        		.add(amountMap_USD.get("col_59"))
        		.add(amountMap_USD.get("col_60"))
        		.add(amountMap_USD.get("col_61"))
        		.add(amountMap_USD.get("col_62"))
        		.add(amountMap_USD.get("col_63"));
        BigDecimal sum_amount_EUR_SUB = amountMap_EUR.get("col_51")
        		.add(amountMap_EUR.get("col_52"))
        		.add(amountMap_EUR.get("col_53"))
        		.add(amountMap_EUR.get("col_54"))
        		.add(amountMap_EUR.get("col_55"))
        		.add(amountMap_EUR.get("col_56"))
        		.add(amountMap_EUR.get("col_57"))
        		.add(amountMap_EUR.get("col_58"))
        		.add(amountMap_EUR.get("col_59"))
        		.add(amountMap_EUR.get("col_60"))
        		.add(amountMap_EUR.get("col_61"))
        		.add(amountMap_EUR.get("col_62"))
        		.add(amountMap_EUR.get("col_63"));
        
        BigDecimal sum_amount_HKD_SUB = amountMap_HKD.get("col_51")
        		.add(amountMap_HKD.get("col_52"))
        		.add(amountMap_HKD.get("col_53"))
        		.add(amountMap_HKD.get("col_54"))
        		.add(amountMap_HKD.get("col_55"))
        		.add(amountMap_HKD.get("col_56"))
        		.add(amountMap_HKD.get("col_57"))
        		.add(amountMap_HKD.get("col_58"))
        		.add(amountMap_HKD.get("col_59"))
        		.add(amountMap_HKD.get("col_60"))
        		.add(amountMap_HKD.get("col_61"))
        		.add(amountMap_HKD.get("col_62"))
        		.add(amountMap_HKD.get("col_63"));
        
        BigDecimal sum_amount_USD_LO_SUB = amountMap_USD_LO.get("col_51")
        		.add(amountMap_USD_LO.get("col_52"))
        		.add(amountMap_USD_LO.get("col_53"))
        		.add(amountMap_USD_LO.get("col_54"))
        		.add(amountMap_USD_LO.get("col_55"))
        		.add(amountMap_USD_LO.get("col_56"))
        		.add(amountMap_USD_LO.get("col_57"))
        		.add(amountMap_USD_LO.get("col_58"))
        		.add(amountMap_USD_LO.get("col_59"))
        		.add(amountMap_USD_LO.get("col_60"))
        		.add(amountMap_USD_LO.get("col_61"))
        		.add(amountMap_USD_LO.get("col_62"))
        		.add(amountMap_USD_LO.get("col_63"));
        BigDecimal sum_amount_EUR_LO_SUB = amountMap_EUR_LO.get("col_51")
        		.add(amountMap_EUR_LO.get("col_52"))
        		.add(amountMap_EUR_LO.get("col_53"))
        		.add(amountMap_EUR_LO.get("col_54"))
        		.add(amountMap_EUR_LO.get("col_55"))
        		.add(amountMap_EUR_LO.get("col_56"))
        		.add(amountMap_EUR_LO.get("col_57"))
        		.add(amountMap_EUR_LO.get("col_58"))
        		.add(amountMap_EUR_LO.get("col_59"))
        		.add(amountMap_EUR_LO.get("col_60"))
        		.add(amountMap_EUR_LO.get("col_61"))
        		.add(amountMap_EUR_LO.get("col_62"))
        		.add(amountMap_EUR_LO.get("col_63"));
        
        BigDecimal sum_amount_HKD_LO_SUB = amountMap_HKD_LO.get("col_51")
        		.add(amountMap_HKD_LO.get("col_52"))
        		.add(amountMap_HKD_LO.get("col_53"))
        		.add(amountMap_HKD_LO.get("col_54"))
        		.add(amountMap_HKD_LO.get("col_55"))
        		.add(amountMap_HKD_LO.get("col_56"))
        		.add(amountMap_HKD_LO.get("col_57"))
        		.add(amountMap_HKD_LO.get("col_58"))
        		.add(amountMap_HKD_LO.get("col_59"))
        		.add(amountMap_HKD_LO.get("col_60"))
        		.add(amountMap_HKD_LO.get("col_61"))
        		.add(amountMap_HKD_LO.get("col_62"))
        		.add(amountMap_HKD_LO.get("col_63"));

        BigDecimal sum_amount_USD_BAL = sum_amount_USD.subtract(sum_amount_USD_SUB);
        BigDecimal sum_amount_EUR_BAL = sum_amount_EUR.subtract(sum_amount_EUR_SUB);
        BigDecimal sum_amount_HKD_BAL = sum_amount_EUR.subtract(sum_amount_HKD_SUB);
        
        BigDecimal sum_amount_USD_LO_BAL = sum_amount_USD_LO.subtract(sum_amount_USD_LO_SUB);
        BigDecimal sum_amount_EUR_LO_BAL = sum_amount_EUR_LO.subtract(sum_amount_EUR_LO_SUB);
        BigDecimal sum_amount_HKD_LO_BAL = sum_amount_EUR_LO.subtract(sum_amount_HKD_LO_SUB);
        result_dataSetList.add(new Object[]{"   1.库存现金", amountMap_USD.get("col_01").setScale(2, 2), amountMap_USD_LO.get("col_01").setScale(2, 2), amountMap_EUR.get("col_01").setScale(2, 2), amountMap_EUR_LO.get("col_01").setScale(2, 2), amountMap_HKD.get("col_01").setScale(2, 2), amountMap_HKD_LO.get("col_01").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   2.银行存款", amountMap_USD.get("col_02").setScale(2, 2), amountMap_USD_LO.get("col_02").setScale(2, 2), amountMap_EUR.get("col_02").setScale(2, 2), amountMap_EUR_LO.get("col_02").setScale(2, 2), amountMap_HKD.get("col_02").setScale(2, 2), amountMap_HKD_LO.get("col_02").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   3.其他货币资金", amountMap_USD.get("col_03").setScale(2, 2), amountMap_USD_LO.get("col_03").setScale(2, 2), amountMap_EUR.get("col_03").setScale(2, 2), amountMap_EUR_LO.get("col_03").setScale(2, 2), amountMap_HKD.get("col_03").setScale(2, 2), amountMap_HKD_LO.get("col_03").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   4.应收票据", amountMap_USD.get("col_04").setScale(2, 2), amountMap_USD_LO.get("col_04").setScale(2, 2), amountMap_EUR.get("col_04").setScale(2, 2), amountMap_EUR_LO.get("col_04").setScale(2, 2), amountMap_HKD.get("col_04").setScale(2, 2), amountMap_HKD_LO.get("col_04").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   5.应收利息", amountMap_USD.get("col_05").setScale(2, 2), amountMap_USD_LO.get("col_05").setScale(2, 2), amountMap_EUR.get("col_05").setScale(2, 2), amountMap_EUR_LO.get("col_05").setScale(2, 2), amountMap_HKD.get("col_05").setScale(2, 2), amountMap_HKD_LO.get("col_05").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   6.坏账准备", amountMap_USD.get("col_06").setScale(2, 2), amountMap_USD_LO.get("col_06").setScale(2, 2), amountMap_EUR.get("col_06").setScale(2, 2), amountMap_EUR_LO.get("col_06").setScale(2, 2), amountMap_HKD.get("col_06").setScale(2, 2), amountMap_HKD_LO.get("col_06").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   7.合同资产", amountMap_USD.get("col_07").setScale(2, 2), amountMap_USD_LO.get("col_07").setScale(2, 2), amountMap_EUR.get("col_07").setScale(2, 2), amountMap_EUR_LO.get("col_07").setScale(2, 2), amountMap_HKD.get("col_07").setScale(2, 2), amountMap_HKD_LO.get("col_07").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   8.合同资产减值准备", amountMap_USD.get("col_08").setScale(2, 2), amountMap_USD_LO.get("col_08").setScale(2, 2), amountMap_EUR.get("col_08").setScale(2, 2), amountMap_EUR_LO.get("col_08").setScale(2, 2), amountMap_HKD.get("col_08").setScale(2, 2), amountMap_HKD_LO.get("col_08").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   9.债权投资", amountMap_USD.get("col_09").setScale(2, 2), amountMap_USD_LO.get("col_09").setScale(2, 2), amountMap_EUR.get("col_09").setScale(2, 2), amountMap_EUR_LO.get("col_09").setScale(2, 2), amountMap_HKD.get("col_09").setScale(2, 2), amountMap_HKD_LO.get("col_09").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   10.债权投资减值准备", amountMap_USD.get("col_10").setScale(2, 2), amountMap_USD_LO.get("col_10").setScale(2, 2), amountMap_EUR.get("col_10").setScale(2, 2), amountMap_EUR_LO.get("col_10").setScale(2, 2), amountMap_HKD.get("col_10").setScale(2, 2), amountMap_HKD_LO.get("col_10").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   11.应收融资租赁款", amountMap_USD.get("col_11").setScale(2, 2), amountMap_USD_LO.get("col_11").setScale(2, 2), amountMap_EUR.get("col_11").setScale(2, 2), amountMap_EUR_LO.get("col_11").setScale(2, 2), amountMap_HKD.get("col_11").setScale(2, 2), amountMap_HKD_LO.get("col_11").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   12.长期应收款1531", amountMap_USD.get("col_12").setScale(2, 2), amountMap_USD_LO.get("col_12").setScale(2, 2), amountMap_EUR.get("col_12").setScale(2, 2), amountMap_EUR_LO.get("col_12").setScale(2, 2), amountMap_HKD.get("col_12").setScale(2, 2), amountMap_HKD_LO.get("col_12").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   13.未实现融资收益", amountMap_USD.get("col_13").setScale(2, 2), amountMap_USD_LO.get("col_13").setScale(2, 2), amountMap_EUR.get("col_13").setScale(2, 2), amountMap_EUR_LO.get("col_13").setScale(2, 2), amountMap_HKD.get("col_13").setScale(2, 2), amountMap_HKD_LO.get("col_13").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   14.应收股利", amountMap_USD.get("col_14").setScale(2, 2), amountMap_USD_LO.get("col_14").setScale(2, 2), amountMap_EUR.get("col_14").setScale(2, 2), amountMap_EUR_LO.get("col_14").setScale(2, 2), amountMap_HKD.get("col_14").setScale(2, 2), amountMap_HKD_LO.get("col_14").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   15.应收账款", amountMap_USD.get("col_15").setScale(2, 2), amountMap_USD_LO.get("col_15").setScale(2, 2), amountMap_EUR.get("col_15").setScale(2, 2), amountMap_EUR_LO.get("col_15").setScale(2, 2), amountMap_HKD.get("col_15").setScale(2, 2), amountMap_HKD_LO.get("col_15").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   16.其他应收款", amountMap_USD.get("col_16").setScale(2, 2), amountMap_USD_LO.get("col_16").setScale(2, 2), amountMap_EUR.get("col_16").setScale(2, 2), amountMap_EUR_LO.get("col_16").setScale(2, 2), amountMap_HKD.get("col_16").setScale(2, 2), amountMap_HKD_LO.get("col_16").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   17.预付账款", amountMap_USD.get("col_17").setScale(2, 2), amountMap_USD_LO.get("col_17").setScale(2, 2), amountMap_EUR.get("col_17").setScale(2, 2), amountMap_EUR_LO.get("col_17").setScale(2, 2), amountMap_HKD.get("col_17").setScale(2, 2), amountMap_HKD_LO.get("col_17").setScale(2, 2)});

        
        result_dataSetList.add(new Object[]{"资产总额", sum_amount_USD.setScale(2, 2), sum_amount_USD_LO.setScale(2, 2), sum_amount_EUR.setScale(2, 2), sum_amount_EUR_LO.setScale(2, 2), sum_amount_HKD.setScale(2, 2), sum_amount_HKD_LO.setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   1.应付账款", amountMap_USD.get("col_51").setScale(2, 2), amountMap_USD_LO.get("col_51").setScale(2, 2), amountMap_EUR.get("col_51").setScale(2, 2), amountMap_EUR_LO.get("col_51").setScale(2, 2), amountMap_HKD.get("col_51").setScale(2, 2), amountMap_HKD_LO.get("col_51").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   2.预收账款", amountMap_USD.get("col_52").setScale(2, 2), amountMap_USD_LO.get("col_52").setScale(2, 2), amountMap_EUR.get("col_52").setScale(2, 2), amountMap_EUR_LO.get("col_52").setScale(2, 2), amountMap_HKD.get("col_52").setScale(2, 2), amountMap_HKD_LO.get("col_52").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   3.其他应付款", amountMap_USD.get("col_53").setScale(2, 2), amountMap_USD_LO.get("col_53").setScale(2, 2), amountMap_EUR.get("col_53").setScale(2, 2), amountMap_EUR_LO.get("col_53").setScale(2, 2), amountMap_HKD.get("col_53").setScale(2, 2), amountMap_HKD_LO.get("col_53").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   4.短期借款", amountMap_USD.get("col_54").setScale(2, 2), amountMap_USD_LO.get("col_54").setScale(2, 2), amountMap_EUR.get("col_54").setScale(2, 2), amountMap_EUR_LO.get("col_54").setScale(2, 2), amountMap_HKD.get("col_54").setScale(2, 2), amountMap_HKD_LO.get("col_54").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   5.应付票据", amountMap_USD.get("col_55").setScale(2, 2), amountMap_USD_LO.get("col_55").setScale(2, 2), amountMap_EUR.get("col_55").setScale(2, 2), amountMap_EUR_LO.get("col_55").setScale(2, 2), amountMap_HKD.get("col_55").setScale(2, 2), amountMap_HKD_LO.get("col_55").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   6.合同负债", amountMap_USD.get("col_56").setScale(2, 2), amountMap_USD_LO.get("col_56").setScale(2, 2), amountMap_EUR.get("col_56").setScale(2, 2), amountMap_EUR_LO.get("col_56").setScale(2, 2), amountMap_HKD.get("col_56").setScale(2, 2), amountMap_HKD_LO.get("col_56").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   7.应付利息", amountMap_USD.get("col_57").setScale(2, 2), amountMap_USD_LO.get("col_57").setScale(2, 2), amountMap_EUR.get("col_57").setScale(2, 2), amountMap_EUR_LO.get("col_57").setScale(2, 2), amountMap_HKD.get("col_57").setScale(2, 2), amountMap_HKD_LO.get("col_57").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   8.应付股利", amountMap_USD.get("col_58").setScale(2, 2), amountMap_USD_LO.get("col_58").setScale(2, 2), amountMap_EUR.get("col_58").setScale(2, 2), amountMap_EUR_LO.get("col_58").setScale(2, 2), amountMap_HKD.get("col_58").setScale(2, 2), amountMap_HKD_LO.get("col_58").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   9.长期借款", amountMap_USD.get("col_59").setScale(2, 2), amountMap_USD_LO.get("col_59").setScale(2, 2), amountMap_EUR.get("col_59").setScale(2, 2), amountMap_EUR_LO.get("col_59").setScale(2, 2), amountMap_HKD.get("col_59").setScale(2, 2), amountMap_HKD_LO.get("col_59").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   10.应付债券", amountMap_USD.get("col_60").setScale(2, 2), amountMap_USD_LO.get("col_60").setScale(2, 2), amountMap_EUR.get("col_60").setScale(2, 2), amountMap_EUR_LO.get("col_60").setScale(2, 2), amountMap_HKD.get("col_60").setScale(2, 2), amountMap_HKD_LO.get("col_60").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   11.长期应付款", amountMap_USD.get("col_61").setScale(2, 2), amountMap_USD_LO.get("col_61").setScale(2, 2), amountMap_EUR.get("col_61").setScale(2, 2), amountMap_EUR_LO.get("col_61").setScale(2, 2), amountMap_HKD.get("col_61").setScale(2, 2), amountMap_HKD_LO.get("col_61").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   12.未确认融资费用", amountMap_USD.get("col_62").setScale(2, 2), amountMap_USD_LO.get("col_62").setScale(2, 2), amountMap_EUR.get("col_62").setScale(2, 2), amountMap_EUR_LO.get("col_62").setScale(2, 2), amountMap_HKD.get("col_62").setScale(2, 2), amountMap_HKD_LO.get("col_62").setScale(2, 2)});
        result_dataSetList.add(new Object[]{"   13.专项应付款", amountMap_USD.get("col_63").setScale(2, 2), amountMap_USD_LO.get("col_63").setScale(2, 2), amountMap_EUR.get("col_63").setScale(2, 2), amountMap_EUR_LO.get("col_63").setScale(2, 2), amountMap_HKD.get("col_63").setScale(2, 2), amountMap_HKD_LO.get("col_63").setScale(2, 2)});
        
        
        result_dataSetList.add(new Object[]{"负债总额", sum_amount_USD_SUB.setScale(2, 2), sum_amount_USD_LO_SUB.setScale(2, 2), sum_amount_EUR_SUB.setScale(2, 2), sum_amount_EUR_LO_SUB.setScale(2, 2), sum_amount_HKD_SUB.setScale(2, 2), sum_amount_HKD_LO_SUB.setScale(2, 2)});
        result_dataSetList.add(new Object[]{"净美元资产", sum_amount_USD_BAL.setScale(2, 2), sum_amount_USD_LO_BAL.setScale(2, 2), sum_amount_EUR_BAL.setScale(2, 2), sum_amount_EUR_LO_BAL.setScale(2, 2), sum_amount_HKD_BAL.setScale(2, 2), sum_amount_HKD_LO_BAL.setScale(2, 2)});


        String[] cols = {
                "col_1_01",
                "col_1_02",
                "col_1_03",
                "col_1_04",
                "col_1_05",
                "col_1_06",
                "col_1_07",
        };

        DataType[] datatypes = {
                DataType.StringType,//1
                DataType.StringType,//2
                DataType.StringType,//3
                DataType.StringType,//1
                DataType.StringType,//2
                DataType.StringType,//3
                DataType.StringType,//1
        };

        RowMeta rowMeta = new RowMeta(cols, datatypes);
        Algo algo = Algo.create(this.getClass().getName());
        DataSet result_dataSet = algo.createDataSet(result_dataSetList, rowMeta);
        return result_dataSet;
    }

    @Override
    public List<AbstractReportColumn> getColumns(List<AbstractReportColumn> columns) throws Throwable {
        String json = "[" +
                "{\"caption\":\"  \"," +
                "\"key\":\"col_1_01\"," +
                "\"link\":\"false\"," +
                "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +

                "{\"caption\":\"美元\"," +
                "\"key\":\"col_1_02\"," +
                "\"link\":\"false\"," +
                "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +
                
				 "{\"caption\":\"本位币数\"," +
				 "\"key\":\"col_1_03\"," +
				 "\"link\":\"false\"," +
				 "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +

                "{\"caption\":\"欧元\"," +
                "\"key\":\"col_1_04\"," +
                "\"link\":\"false\"," +
                "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +
                
				 "{\"caption\":\"本位币数\"," +
				 "\"key\":\"col_1_05\"," +
				 "\"link\":\"false\"," +
				 "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +
				
				 
				 "{\"caption\":\"港币\"," +
				 "\"key\":\"col_1_06\"," +
				 "\"link\":\"false\"," +
				 "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +
				
				 "{\"caption\":\"本位币数\"," +
				 "\"key\":\"col_1_07\"," +
				 "\"link\":\"false\"," +
				 "\"type\":\"" + ReportColumn.TYPE_TEXT + "\"}," +


                "]";
        JSONArray titleJSON = JSONArray.parseArray(json);
        columns.addAll(makeTitles(titleJSON));
        return columns;
    }

    //构造报表头
    private AbstractReportColumn makeColumn(String caption, String ReportColumnType, String fieldKey, Boolean
            isLink, String dyname, String currency) {
        ReportColumn column = new ReportColumn();
        if (StringUtils.isNotBlank(currency)) {
            column.setCurrencyField(currency);
        }

        if (StringUtils.isNotBlank(dyname)) {
            column.setRefBasedataProp(dyname);
            column = ReportColumn.createCurrencyColumn(fieldKey);
        }

        LocaleString localeString = new LocaleString();
        localeString.setLocaleValue(caption);

        column.setCaption(localeString);
        column.setDisplayProp(fieldKey);
        column.setScale(-1);
        //
        column.setFieldKey(fieldKey);
        ColumnStyle defstyle = new ColumnStyle();
        defstyle.setFontSize(12);
        defstyle.setTextAlign("default");
        column.setStyle(defstyle);

        column.setHyperlink(isLink == null ? false : isLink);
        column.setFieldType(ReportColumnType);

        return column;
    }

    //集合报表头
    private List<AbstractReportColumn> makeTitles(JSONArray titleJSON) {
        List<AbstractReportColumn> titles = new ArrayList<>();
        for (int i = 0; i < titleJSON.size(); i++) {
            JSONObject item = titleJSON.getJSONObject(i);
            titles.add(makeColumn(item.getString("caption"),
                    item.getString("type"),
                    item.getString("key"),
                    item.getBoolean("link"),
                    item.getString("dyname"),
                    item.getString("currency")));
        }
        return titles;
    }
}
