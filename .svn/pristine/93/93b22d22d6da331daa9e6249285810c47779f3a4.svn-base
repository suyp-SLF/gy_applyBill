package kd.cus.wb.botp;

import kd.bos.dataentity.entity.DynamicObject;
import kd.bos.dataentity.entity.DynamicObjectCollection;
import kd.bos.entity.ExtendedDataEntity;
import kd.bos.entity.plugin.AbstractOperationServicePlugIn;
import kd.bos.entity.plugin.args.AfterOperationArgs;
import kd.bos.entity.plugin.args.BeforeOperationArgs;
import kd.bos.form.IPageCache;
import kd.bos.mvc.form.ClientViewProxy;
import kd.bos.orm.query.QCP;
import kd.bos.orm.query.QFilter;
import kd.bos.servicehelper.BusinessDataServiceHelper;
import kd.bos.servicehelper.QueryServiceHelper;
import kd.bos.servicehelper.botp.BFTrackerServiceHelper;
import kd.bos.servicehelper.botp.ConvertServiceHelper;
import kd.bos.servicehelper.operation.SaveServiceHelper;
import kd.fi.arapcommon.helper.BotpRelationHelper;
import org.apache.commons.lang3.StringUtils;

import java.awt.image.BufferStrategy;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class BotpRepairOppoPlus extends AbstractOperationServicePlugIn {



    @Override
    public void beforeExecuteOperationTransaction(BeforeOperationArgs e) {

        List<ExtendedDataEntity> select = e.getSelectedRows();

        List<Object> select_ids = select.stream().map(i -> i.getBillPkId()).collect(Collectors.toList());

        String[] select_fields = {
                "bfgy_billnofield",
                "bfgy_success",
                "bfgy_textfield",
                "bfgy_textfield1",
                "bfgy_textfield2",
                "bfgy_textfield3",
                "bfgy_textfield4",
                "bfgy_textfield5",
                "bfgy_textfield6",
                "bfgy_textfield7",
                "bfgy_textfield8",
                "bfgy_textfield9",
                "bfgy_textfield10",
                "bfgy_textfield11",
                "bfgy_textfield12",
                "bfgy_textfield13",
                "bfgy_textfield14"
        };

        DynamicObject[] cols = BusinessDataServiceHelper.load("bfgy_botppool", StringUtils.join(select_fields, ","), new QFilter[]{new QFilter("id", QCP.in, select_ids)});

        int suc_num = 0;
        int fal_num = 0;
        for(DynamicObject m : cols) {
            try {
                String application = m.getString("bfgy_textfield");//目的单应用
                BotpRelationHelper helper = new BotpRelationHelper(application);
                String type = m.getString("bfgy_textfield6");//类型
                if ("unite".equalsIgnoreCase(type)) {
                    String E_dstBillLogo = m.getString("bfgy_textfield3");
                    long E_dstBillId = m.getLong("bfgy_textfield8");
                    String E_srcBillLogo = m.getString("bfgy_textfield1");
                    List<Long> E_srcBillIds = Arrays.asList(m.getString("bfgy_textfield7").split(",")).stream().map(s -> Long.parseLong(s.trim())).collect(Collectors.toList());

                    helper.saveApRation4Unite(E_dstBillLogo, E_dstBillId, E_srcBillLogo, E_srcBillIds);
                } else if ("entry".equalsIgnoreCase(type)) {
                    String E_dstBillLogo = m.getString("bfgy_textfield3");
                    long E_dstBillIdEx = m.getLong("bfgy_textfield10");
                    String E_dstEntryNameEx = m.getString("bfgy_textfield12");
                    long E_dstEntryIdEx = m.getLong("bfgy_textfield14");
                    String E_srcBillLogo = m.getString("bfgy_textfield1");
                    long E_srcBillIdEx = m.getLong("bfgy_textfield9");
                    String E_srcEntryNameEx = m.getString("bfgy_textfield11");
                    long E_srcEntryIdEx = m.getLong("bfgy_textfield13");

                    helper.saveAllRation4Entry(E_dstBillLogo, E_dstBillIdEx, E_dstEntryNameEx, E_dstEntryIdEx, E_srcBillLogo, E_srcBillIdEx, E_srcEntryNameEx, E_srcEntryIdEx);
                }

                m.set("bfgy_textfield5","成功");
                m.set("bfgy_success",true);
                suc_num ++;
            } catch (Exception ex) {
                //失败
                m.set("bfgy_textfield5","失败：" + ex.getMessage());
                m.set("bfgy_success",false);
                fal_num ++;
            }
        }
        SaveServiceHelper.save(cols);
        e.setCancelMessage("成功" + suc_num + "条！失败" + fal_num + "条！");

    }
}
